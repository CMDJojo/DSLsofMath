DSLsofMath week 1: a short summary / overview
* L1.1 Intro / admin
+ Lecturer: Patrik Jansson
** Technology / tooling
+ [[file:Live1_2022.lhs][emacs]]      for live coding, etc. (org-mode + Haskell)
+ [[https://chalmers.instructure.com/courses/17542][Canvas]]     for the course homepage 
+ [[https://www.adlibris.com/se/bok/domain-specific-languages-of-mathematics-9781848903883][paper+PDF]]  for the course book: [[https://www.adlibris.com/se/bok/domain-specific-languages-of-mathematics-9781848903883][Adlibris]] + [[https://chalmers.instructure.com/courses/17542/files/1964546?wrap=1][PDF]]
+ [[https://github.com/DSLsofMath/DSLsofMath][github]]     for source code of the lectures + book
+ [[https://chalmers.zoom.us/j/64738429538][Zoom]]       for delivering the lectures
+ [[https://jamboard.google.com/d/1m9B5YYHABrll_tSgbIgSEZVsnogEKOSxQNmy83gyjJg/viewer][Jamboard]]   for "drawing on the whiteboard"
+ [[https://www.youtube.com/playlist?list=PLf5C73P7ab-5sdvsqCjnF8iaYOtXMRNaZ][YouTube]]    for video archiving
** Examination
+ 2 Assignments (labs) -> Pass/fail grade
+ Written Exam         -> grade U/3/4/5 (Chalmers), U/G/VG (GU)
+ Weekly exercises     -> Bonus points for the exam
** Reminder about spending time on the course:
+ Advice from last years' students:
  spending time on the course pays off.
  It is not enough to just focus on the labs.
+ Patrik's advice: please try to solve all the exercises in the book.
** Course evaluation: student representatives
| Prg | Namn               |
|-----+--------------------|
| D   | Enayatullah Norozi |
| D   | Jesper Führ        |
| D   | Samuel Kyletoft    |
| D   | Eli Adelhult       |
| TM  | Masoud Shaker      |

** Learning outcomes (for the whole course, english version)
*** KU = Knowledge and Understanding
+ KU.DSL      = design and implement a DSL for a new domain
+ KU.Org      = organize areas of mathematics in DSL terms
+ KU.Explain  = explain main concepts of elementary real and complex analysis, algebra, and linear algebra
*** SA = Skills and Abilities
+ SA.Notation = develop adequate notation for mathematical concepts
+ SA.Calc     = perform calculational proofs
+ SA.Power    = use power series for solving differential equations
+ SA.Laplace  = use Laplace transforms for solving differential equations
*** JA = Judgement and Approach
+ JA = discuss and compare different software implementations of mathematical concepts
** First break-out rooms to start the discussion [10min]
+ brief presentation round
+ share examples of confusing notation in mathematics cmp. to programming
* L1.1 learning outcomes:
** What is a Domain-Specific Language (DSL)
A DSL has four components:
+ Surface syntax (mostly ignored in this course): a set of strings defined by a grammar
+ Abstract syntax: usually a recursive Haskell datatype of syntax trees
+ Semantic type: a type of values (meanings) for the syntax
+ Semantics: a function from AbsSyn to Sem
https://en.wikipedia.org/wiki/Domain-specific_language
** Variable scope and binding in mathematical expressions [integral, fun.def.]
** Haskell interpreter use and interp. of error messages ([[file:Live1_2022.lhs][interactive live coding]])
** Syntax trees
+ datatype of syntax trees of simple arith. expr.
** First evaluator: |eval :: E -> Int|
* E1.1 learning outcomes:
** a Haskell environment up and running
** syntax trees with constructor for variables
** definition and use of |Env|
** laws, properties, and testing























































* L1.2 Intro / admin
** First eval meeting (with student representatives) done
** Weekly exercises (bonusuppgifter)
** Exercise sessions (övningar): be prepared with questions
   2h*2 lectures = 4h/w
   2h*2 exercise sessions = 4h/w
   total 8h/w "scheduled"
   But, 7.5hp = 200h spread over 8 study weeks -> 200/8 = 25h/week "study time"
   Thus 17h left for you to schedule your own work with the course.
** Read the book! Chapter N = study week N
** Student communication: Canvas discussion forum
** Explore the canvas page:
+ Home = Syllabus = "Kurs-pm"
+ Assignments = all deadlines and where you hand in exercises and labs
+ People = where you can find lab groups, etc.
+ Pages = useful information about different parts of the course
+ Files = the book and other (mostly older) material
+ Discussions = a forum for student discussions and questions
+ Announcements = where the teaching teams broadcasts messages



* L1.2 learning outcomes:
** Expanding a number system [N -> Z -> Q -> REAL -> Complex]
+ When equations meet types - more and more eq. can be solved.
** Active reading of mathematical text [Complex number case study]
** Modelling (different versions of) Complex in Haskell
** The DSL of types in Haskell:
*** |type|, |newtype|, |data|
*** types and their constructors
*** |data|: choice, recursion, parameters
*** datatype of syntax trees of simple arith. expr.
*** |Nat|, |ImagUnits|, |CA|, |CB|, |CE|
** Syntax and semantics
** |eval| for complex number expressions
* [[file:Live2_2022.lhs::module Live2 where][Live coding]] & [[https://jamboard.google.com/d/1BomAkVUUucA5VcAEeqZTwsX0YqahYQiOxPm4wv0ylqQ/viewer][Jamboard]]
* E1.2 learning outcomes:
** syntax trees for |ComplexSyn r|, the "complex numbers extension" of a type |r|
** more use of |Env| and |lookup|
** more on pattern matching: deep patterns (in |simplifyStep|)
** more laws, properties, and testing
** TODO: |Maybe|, |Either|
* Notation for this file:
** L1.1 means week 1, lecture 1 (Tuesday)
** L1.2 means week 1, lecture 2 (Thursday)
** E1.1 means week 1, exercise session 1 (the presentation / live coding part)
** E1.2 means week 1, exercise session 2 (the presentation / live coding part)
** The format of the file is Emacs Org-mode
