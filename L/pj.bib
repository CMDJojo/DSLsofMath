@Inproceedings{TFPIE15_DSLsofMath_IonescuJansson,
  author =       {Ionescu, Cezar and Jansson, Patrik},
  year =         2016,
  title =        {Domain-Specific Languages of Mathematics: Presenting
                  Mathematical Analysis Using Functional Programming},
  editor =       {Jeuring, Johan and McCarthy, Jay},
  booktitle =    {Proceedings of the 4th and 5th International
                  Workshop on Trends in Functional Programming in
                  Education, Sophia-Antipolis, France and University
                  of Maryland College Park, USA, 2nd June 2015 and 7th
                  June 2016},
  series =       {Electronic Proceedings in Theoretical Computer
                  Science},
  volume =       230,
  publisher =    {Open Publishing Association},
  pages =        {1--15},
  eptcskey =     "EPTCS230.1",
  doi =          {10.4204/EPTCS.230.1},
}

@inproceedings{TFPIE18_DSLMResults_JanssonEinarsdottirIonescu,
  author =	 {Patrik Jansson and Sólrún Halla Einarsdóttir and
                  Cezar Ionescu},
  title =	 {Examples and Results from a BSc-level Course on
                  Domain-Specific Languages of Mathematics},
  booktitle =	 {Proc. 7th Int. Workshop on Trends in Functional
                  Programming in Education},
  publisher =	 {Open Publishing Association},
  longseries =	 {Electronic Proceedings in Theoretical Computer
                  Science},
  series =	 {EPTCS},
  volume =	 295,
  ISSN =	 {2075-2180},
  url =		 {http://dx.doi.org/10.4204/EPTCS.295.6},
  DOI =		 {10.4204/eptcs.295.6},
  year =	 2019,
  pages =	 {79–90},
  note =	 {Presented at TFPIE 2018.}
}

@misc{dslmcourseplan,
  author =       {Ionescu, Cezar and Jansson, Patrik},
  title =        {Domain-Specific Languages of Mathematics},
  note =         {Course plan for DAT325, Chalmers University of
                  Technology},
  url =
                  {https://www.student.chalmers.se/sp/course?course_id=24179},
  year =         2015
}

@incollection{ionescujansson:LIPIcs:2013:3899,
  title =        {Dependently-typed programming in scientific
                  computing},
  author =       {Ionescu, Cezar and Jansson, Patrik},
  booktitle =    {Implementation and Application of Functional
                  Languages},
  pages =        {140--156},
  year =         2013,
  doi =          {10.1007/978-3-642-41582-1\_9},
  publisher =    {Springer Berlin Heidelberg}
}

@inproceedings{ionescu2013testing,
  title =        {Testing versus proving in climate impact research},
  author =       {Ionescu, Cezar and Jansson, Patrik},
  booktitle =    {Proceedings of the 18th Workshop Types for Proofs
                  and Programs (TYPES’11)},
  volume =       19,
  pages =        {41--54},
  doi =          {10.4230/LIPIcs.TYPES.2011.41},
  year =         2013
}

@article{mu2009algebra,
  title =        {Algebra of programming in {Agda}: Dependent types
                  for relational program derivation},
  author =       {Mu, Shin-Cheng and Ko, Hsiang-Shang and Jansson,
                  Patrik},
  journal =      {Journal of Functional Programming},
  volume =       19,
  number =       5,
  pages =        545,
  doi =          {10.1017/S0956796809007345},
  year =         2009
}

@inproceedings{LinckeJanssonetalDSLWC2009,
  author =        {Daniel Lincke and Patrik Jansson and Marcin Zalewski and
                   Cezar Ionescu},
  booktitle =     {IFIP Working Conf. on Domain-Specific Languages},
  pages =         {236--261},
  series =        {LNCS},
  title =         {Generic Libraries in {\cpp} with Concepts from
                   High-Level Domain Descriptions in {Haskell}: A {DSL}
                   for Computational Vulnerability Assessment},
  volume =        {5658/2009},
  year =          {2009},
  doi =           {10.1007/978-3-642-03034-5_12},
}

@inproceedings{ionescujansson2013DTPinSciComp,
  author =        {Cezar Ionescu and Patrik Jansson},
  booktitle =     {24th Symposium on Implementation and Application of
                   Functional Languages (IFL 2012)},
  editor =        {Ralf Hinze},
  pages =         {140--156},
  publisher =     {Springer-{V}erlag},
  series =        {LNCS},
  title =         {Dependently-typed programming in scientific
                   computing: Examples from economic modelling},
  volume =        {8241},
  year =          {2013},
  doi =           {10.1007/978-3-642-41582-1_9},
}

@booklet{jaeger13:GSSshort,
  author =        {Carlo Jaeger and Patrik Jansson and
                   Sander van der Leeuw and Michael Resch and
                   J. David Tabara},
  howpublished =  {\url{http://blog.global-systems-science.eu/?p=1512}},
  note =          {Conference Version, prepared for the Second Open
                   Global Systems Science Conference June 10-12, 2013,
                   Brussels.},
  title =         {{GSS}: Towards a Research Program for {Global Systems
                   Science}},
  year =          {2013},
  isbn =          {978.3.94.1663-12-1},
}

@article{DBLP:journals/corr/BottaJICB16,
  author    = {Nicola Botta and
               Patrik Jansson and
               Cezar Ionescu and
               David R. Christiansen and
               Edwin Brady},
  title     = {Sequential decision problems, dependent types and generic solutions},
  journal   = {Logical Methods in Computer Science},
  volume    = {13},
  number    = {1},
  year      = {2017},
  url       = {https://doi.org/10.23638/LMCS-13(1:7)2017},
  doi       = {10.23638/LMCS-13(1:7)2017},
  timestamp = {Wed, 03 May 2017 14:47:56 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/BottaJICB16},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@Article{botta_jansson_ionescu_2017_avoidability,
  author =       {Nicola Botta and Patrik Jansson and Cezar Ionescu},
  title =        {Contributions to a computational theory of policy
                  advice and avoidability},
  journal =      {Journal of Functional Programming},
  issn =         {0956-7968},
  publisher =    {Cambridge University Press},
  volume =       27,
  pages =        {1--52},
  year =         2017,
  DOI =          {10.1017/S0956796817000156},
  COMMENTnote =  {Accepted for publication 2017-09-20. Published
                  online 2017-10-24.},
  abstract =     {We present the starting elements of a mathematical
                  theory of policy advice and avoidability. More
                  specifically, we formalize a cluster of notions
                  related to policy advice, such as policy, viability,
                  reachability, and propose a novel approach for
                  assisting decision making, based on the concept of
                  avoidability. We formalize avoidability as a
                  relation between current and future states,
                  investigate under which conditions this relation is
                  decidable and propose a generic procedure for
                  assessing avoidability. The formalization is
                  constructive and makes extensive use of the
                  correspondence between dependent types and logical
                  propositions, decidable judgments are obtained
                  through computations. Thus, we aim for a
                  computational theory, and emphasize the role that
                  computer science can play in global system science.}
}

@TechReport{DSLMBSc2020_ControlTheory,
  author =	 {Simon Hägglund and Jakob Alexander Fihlman and Elin
                  Ohlman and Filip Nylander and Christian Josefsson
                  and Tommy Räjert},
  title =	 {A Computer Science Approach to Teaching Control
                  Theory},
  subtitle =	 {Developing Learning Material Using Domain-Specific
                  Languages},
  institution =	 {Department of Computer Science and Engineering
                  Chalmers University of Technology},
  year =	 2020,
  type =	 {Bachelor of Science Thesis in Computer Science and
                  Engineering},
  note =	 {Supervisor: Patrik Jansson. Examiner: David Sands. Available from
                  \href{https://chalmers.instructure.com/courses/8840/assignments/17961/submissions/7281?download=611859&inline=1}{Chalmers
                  Canvas}.}
}

@TechReport{DSLMBSc2016_TSS_med_DSL,
  author =	 {Filip Lindahl and Cecilia Rosvall and Peter Ngo and
                  Jacob Jonsson and Joakim Olsson},
  title =	 {Programmering som undervisningsverktyg för
                  Transformer, signaler och system},
  subtitle =	 {Utvecklingen av läromaterialet {TSS} med {DSL}},
  school =	 {Chalmers tekniska högskola och Göteborgs
                  universitet},
  department =	 {Institutionen för Data- och Informationsteknik},
  institution =	 {Chalmers University of Technology / Department of
                  Computer Science and Engineering (Chalmers)},
  year =	 2016,
  type =	 {Examensarbete för kandidatexamen / BSc thesis},
  note =	 {Supervisor: Patrik Jansson. Examiner: Niklas Broberg. Available at
                  \url{https://hdl.handle.net/20.500.12380/243894}.}
}

@TechReport{DSLMBSc2018_Physics,
  author =	 {Johansson, Johan and Lundström, Oskar and Sjöström,
                  Erik and Werner, Björn},
  title =	 {Ett komplementerande läromaterial för datastudenter
                  som lär sig fysik - Läromaterialet Learn You a
                  Physics for Great Good!},
  institution =	 {Chalmers University of Technology / Department of
                  Computer Science and Engineering (Chalmers)},
  year =	 2018,
  URL =		 {https://hdl.handle.net/20.500.12380/256122},
  type =	 {Examensarbete för kandidatexamen / BSc thesis},
  abstract =	 {Denna rapport beskriver utvecklingen av
                  läromaterialet Learn You a Physics for Great
                  Good!. Materialet utvecklades som ett kandidatarbete
                  vid institutionen för Data- och informationsteknik
                  på Chalmers tekniska högskola. Syftet med projektet
                  är att skapa ett textbaserat läromaterial som
                  presenterar fysik med hjälp av
                  programmeringskonceptet domänspecifika språk, där de
                  domänspecifika språken är implementerade i
                  programmeringsspråket Haskell. Vidare diskuteras den
                  pedagogiska nyttan av ett läromaterial av detta slag
                  samt hur väl fysik och domänspecifika språk går att
                  kombinera. Bakgrunden till projektet är fysikkursen
                  Fysik för ingenjörer. Kursen är obligatorisk för
                  studenter på Datateknik (D) på Chalmers och har haft
                  ganska dålig tentastatistik i flera år. Vi tror att
                  en faktor till att just D-studenter får dåliga
                  resultat i denna kurs är att studenterna finner
                  ämnet irrelevant i förhållande till resten av
                  utbildningen. Vi tror också att detta problem kan
                  lösas med ett läromaterial som bryggar fysik och
                  programmering, och både visar på relevansen av ämnet
                  och väcker intresse för fysik. Ett ökat intresse för
                  fysik leder förhoppningsvis till bättre resultat i
                  kursen. Det resulterande läromaterialet innehåller
                  fem kapitel som behandlar områdena fysikaliska
                  dimensioner, matematisk analys, vektorer och
                  partikelmekanik, och tillämpningar av dem. Varje
                  kapitel består av Haskell-kod tillsammans med
                  beskrivande text. Vissa kapitel bygger upp
                  domänspecifika språk från grunden medan andra
                  kombinerar och tillämpar tidigare domänspecifika
                  språk på fysikaliska problem. Läromaterialet är
                  publicerat på en hemsida3 och dess källkod finns
                  fritt tillgänglig4. Rapporten beskriver även de
                  möten och diskussioner som genomförts med
                  utomstående. Syftet var att förbättra läromaterialet
                  samt att genomföra en informellt test av
                  läromaterialet. Slutsatserna är att domänspecifika
                  språk kan ha en pedagogisk nytta i
                  fysikundervisning. Den rigorösa naturen hos Haskell
                  och domänspecifika språk gör att den
                  fysikproblemlösningen de används för också blir
                  rigorös, utan möjlighet till intuitiva men felaktiga
                  genvägar. Detta tankesätt tror vi kan främja lärande
                  om det integreras i traditionell fysikundervisning.}
}

